{"version":3,"sources":["components/News/News.module.css","components/Dialogs/Messages/Messages.module.css","assets/imges/reloader.svg","components/Profile/MyPosts/Post/Post.module.css","components/Navbar/Navbar.module.css","components/Login/login.module.css","components/Header/Header.module.css","serviceWorker.js","components/Navbar/Navbar.js","components/News/News.jsx","components/Music/Music.jsx","Redux/dialogsReducer.js","components/Dialogs/Messages/SendElement/sendPlace.jsx","components/Dialogs/Messages/Messages.jsx","components/Dialogs/DialogsItem/DialogsItem.jsx","utilites/validators/validator.js","components/common/FormControls/Forms.jsx","components/Dialogs/Dialogs.jsx","hoc/withAuthRedirect.js","components/Dialogs/DialogsContainer.jsx","api/api.js","Redux/usersReducer.js","components/Users/paginator.jsx","components/Users/User.jsx","components/Users/Users.jsx","components/common/preloader/preloader.js","Redux/userSelectors.js","components/Users/UsersContainer.jsx","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileStatus.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","Redux/profileReducer.js","components/Profile/MyPosts/Post/Post.js","components/Profile/MyPosts/MyPosts.js","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.js","components/Profile/ProfileContainer.jsx","components/Header/Header.js","Redux/authReducer.js","components/Header/HeaderContainer.jsx","components/Login/Login.jsx","Redux/appReducer.js","App.js","Redux/redux-store.js","index.js","components/Users/Users.module.css","components/Profile/MyPosts/MyPosts.module.css","components/common/FormControls/Forms.module.css","components/Dialogs/DialogsItem/DialogsItem.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Dialogs/Dialogs.module.css","assets/imges/userIcon.jpg"],"names":["module","exports","Boolean","window","location","hostname","match","Navbar","className","style","nav","item","to","activeClassName","active","News","flow","Music","initialState","dialogsData","id","name","messagesData","text","dialogsReducer","state","action","type","body","newMessageBody","SendPlace","props","Messages","m","dialog","DialogsItem","d","imgAva","avatar","src","alt","link","required","value","maxLengthCreator","maxLength","length","withFormElement","Element","input","meta","hasError","touched","error","formControl","TextArea","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","placeholder","validate","Dialogs","messagesPage","dialogsElement","map","key","messagesElement","ds","dialogS","dialogsItems","messages","sendMessage","mapStateToProps","isAuth","authIcon","withAuthRedirect","Component","RedirectComponent","this","React","connect","compose","dispatch","sendMessageCreator","instance","axios","baseURL","withCredentials","headers","usersAPI","currentPage","pageSize","get","then","response","data","userId","post","delete","authAPI","email","password","rememberMe","profileAPI","status","put","users","totalUsers","isFetching","followProgres","followSuccess","unfollowSuccess","setCurrentPage","toggleIsFetching","toggleFollowFetching","usersReducer","followed","totalCount","filter","Paginator","pagesCount","Math","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortion","rightPortion","pagination","onClick","p","selectPage","onPageChanged","User","user","firstBlock","imgIcon","photos","small","userPhoto","secondBlock","disabled","some","unfollow","follow","Users","u","Preloader","backgroundColor","preloader","getUsersState","createSelector","usersPage","getPageSize","getTotalUsers","getCurrentPage","getIsFetching","getFollowProgres","UsersContainer","pageNumber","getUsers","nextProps","nextState","a","resultCode","page","items","ProfileStatusWithHooks","editMode","setEditMode","setStatus","useEffect","onBlur","updateUserStatus","autoFocus","onChange","e","currentTarget","onDoubleClick","ProfileInfo","profile","discriptionBlock","postsData","message","likesCount","getUsersProfile","profileReducer","newPost","newPostText","Post","MyPosts","memo","postsElement","posts","generalContent","MyPostsFormRedux","addPost","postItems","postForm","textAreaField","button","MyPostsContainer","profilePage","addPostActionCreator","Profile","ProfileContainer","params","authorizedUserId","getUserStatus","withRouter","Header","header","logo","loginIcon","divLogOut","divAvatar","loginName","login","logout","divLogIn","setAuthUserData","payload","authMe","dispath","authReducer","HeaderContainer","Input","LoginReduxForm","checkbox_group","checkbox","for","label","b1","button_login","styleFormError","summuryError","stopSubmit","_error","loginContainer","loginForm","title","formData","initialized","appReducer","App","initializApp","path","render","DialogsContainer","app","promise","Promise","all","reducers","combineReducers","formReducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunkMiddleWare","getState","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a056a163.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"flow\":\"News_flow__2d6LC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialog\":\"Messages_dialog__1EuPo\"};","module.exports = __webpack_public_path__ + \"static/media/reloader.aeb3dcc8.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__2z0fz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav___aHg1\",\"item\":\"Navbar_item__M7DYp\",\"active\":\"Navbar_active__2ZEnG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginContainer\":\"login_loginContainer__HT8lj\",\"loginForm\":\"login_loginForm__Roluh\",\"title\":\"login_title__1fPjh\",\"form\":\"login_form__2HMlR\",\"input\":\"login_input__1Nnyq\",\"checkbox_group\":\"login_checkbox_group__1VFLs\",\"checkbox\":\"login_checkbox__2SOQy\",\"label\":\"login_label__eI3W7\",\"button_login\":\"login_button_login__1bHgB\",\"b1\":\"login_b1__1Sa56\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1e-lR\",\"logo\":\"Header_logo__heUy2\",\"loginIcon\":\"Header_loginIcon__2gyKp\",\"login\":\"Header_login__3HUVm\",\"divLogIn\":\"Header_divLogIn__XF8eD\",\"divLogOut\":\"Header_divLogOut__QUPMG\",\"loginName\":\"Header_loginName__2EjwZ\",\"button\":\"Header_button__2NqTj\",\"divAvatar\":\"Header_divAvatar__2OPRc\",\"avatar\":\"Header_avatar__2xJ4G\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport style from'./Navbar.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <nav className = {style.nav}>\r\n            <ul>\r\n                <li className={style.item}><NavLink to = \"/Profile\" activeClassName = {style.active} >Profile</NavLink></li>\r\n                <li className={style.item}><NavLink to = \"/Dialogs\" activeClassName = {style.active} >Messages</NavLink></li>\r\n                <li className={style.item}><NavLink to = \"/News\" activeClassName = {style.active} >News</NavLink></li>\r\n                <li className={style.item}><NavLink to = \"/Music\" activeClassName = {style.active} >Music</NavLink></li>\r\n                <li className={style.item}><NavLink to = \"/Users\" activeClassName = {style.active}>Users</NavLink></li> \r\n                <li className={style.item}><NavLink to = \"\">Settings</NavLink></li>\r\n            </ul>\r\n        </nav>\r\n    )\r\n} \r\n\r\nexport default Navbar;","import React from 'react';\r\nimport style from './News.module.css';\r\n\r\nconst News = () => {\r\n    return(\r\n        <div className = {style.flow}>\r\n            <p>news</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default News;","import React from 'react';\r\nimport m from './Music.module.css';\r\n\r\nconst Music = () => {\r\n    return (\r\n        <div>\r\n            Music\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Music;","const SEND_MESSAGE = 'SEND-MESSAGE';\r\n\r\nlet initialState = {\r\n    dialogsData: [ \r\n        {id: 1, name: 'Dima'},\r\n        {id: 2, name: 'Niko'}\r\n    ],\r\n    messagesData: [\r\n        {id: 1, text: 'text messageSSSsssSSS'},\r\n        {id: 2, text: 'text sexXx'}\r\n    ]\r\n}\r\n\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n    if(action.type === SEND_MESSAGE){\r\n        let body = action.newMessageBody;\r\n        return({\r\n            ...state,\r\n            messagesData: [...state.messagesData, {id:6, text: body}]\r\n        })\r\n    }\r\n    return state;\r\n}\r\n\r\nexport const sendMessageCreator = (newMessageBody) => ({type: SEND_MESSAGE, newMessageBody})\r\n\r\nexport default dialogsReducer;","import React from 'react';\r\nimport m from './sendPlace.module.css';\r\n\r\n//component for  display DialogsItem`s messages\r\nconst SendPlace = (props) => {\r\n    return(\r\n        <div>  \r\n            {/* <textarea ></textarea> */}\r\n        </div>   \r\n    )\r\n}\r\n\r\nexport default SendPlace;","import React from 'react';\r\nimport m from './Messages.module.css';\r\nimport SendPlace from './SendElement/sendPlace';\r\n\r\n//component for  display DialogsItem`s messages\r\nconst Messages = (props) => {\r\n    return(\r\n        <div>  \r\n            <div className = {m.dialog}>{props.dialog}</div>\r\n            <SendPlace />\r\n        </div> \r\n          \r\n    )\r\n}\r\n\r\nexport default Messages;","import React from 'react';\r\nimport d from './DialogsItem.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\n// Links for dialogs\r\nconst DialogsItem = (props) => {\r\n    return(\r\n        <div className = {d.dialog}>\r\n            <div className = {d.imgAva}>\r\n                <img className = {d.avatar} src=\"https://99px.ru/sstorage/1/2020/02/image_12302200000423560081.gif\" alt=\"avatar\"/>\r\n            </div>\r\n            <div className = {d.link}>                     \r\n                <NavLink to = {\"/dialogs/\" + props.id}>{props.name}</NavLink>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogsItem;","export const required = (value) => {\r\n    if(value) return undefined\r\n\r\n    return \"field is required\";\r\n} \r\n\r\nexport const maxLengthCreator = (maxLength) => {\r\n    return (value) => {\r\n        if(value && value.length > maxLength) return `max length is ${maxLength} symbols`;\r\n    \r\n        return undefined;\r\n    } \r\n} ","import React from 'react';\r\nimport style from './Forms.module.css';\r\n\r\nexport const withFormElement = (Element) => ({input, meta, ...props}) => {\r\n\r\n    const hasError = meta.touched && meta.error;\r\n    return(\r\n        <div className = {`${style.formControl} ${hasError ? style.error : ''}`}>\r\n            <div>\r\n                <Element  {...input} {...props}/>      \r\n            </div>\r\n            <div>\r\n            { hasError && <span>{meta.error}</span>}    \r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n","import React from 'react';\r\nimport ds from './Dialogs.module.css';\r\nimport Messages from './Messages/Messages';\r\nimport DialogsItem from './DialogsItem/DialogsItem';\r\nimport {Field, reduxForm} from 'redux-form';\r\n//import { TextArea } from '../common/FormControls/Forms';\r\nimport { required, maxLengthCreator } from '../../utilites/validators/validator';\r\nimport { withFormElement } from '../common/FormControls/Forms';\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let state = props.messagesPage;\r\n\r\n    let dialogsElement = state.dialogsData.map(d => <DialogsItem name = {d.name} key = {d.id} id = {d.id}/>)\r\n    let messagesElement = state.messagesData.map(m => <Messages dialog = {m.text} key = {m.id} id = {m.id}/>)\r\n\r\n    let onSendMessageClick = (value) => {\r\n        props.sendMessage(value.newMessageBody);\r\n    }\r\n    \r\n    return(\r\n        <div className = {ds.dialogS}>\r\n            <div className = {ds.dialogsItems}>\r\n                {dialogsElement}\r\n            </div>\r\n            <div className = {ds.messages}>\r\n                <div>{messagesElement}</div>\r\n                <AddMessageFormRedux onSubmit = {onSendMessageClick}/>\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nconst maxLength = maxLengthCreator(20); \r\nconst TextArea = withFormElement(\"textarea\");\r\n\r\nconst AddMessageForm = (props) => {\r\n    return(\r\n        <form onSubmit = {props.handleSubmit}>\r\n            <div>\r\n                <Field \r\n                    component = {TextArea} \r\n                    name = \"newMessageBody\" \r\n                    placeholder = \"enter your message\"\r\n                    validate = {[required, maxLength]}    \r\n                />\r\n            </div>\r\n            <div>\r\n                <button>Send</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddMessageFormRedux = reduxForm({form: 'message'})(AddMessageForm)\r\nexport default Dialogs;","import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nlet mapStateToProps = (state) => ({\r\n    isAuth: state.authIcon.isAuth\r\n})\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render(){\r\n            if (!this.props.isAuth) return <Redirect to = {'/Login'} />\r\n\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n    \r\n    let ConnecterAuthRedirectComponent = connect(mapStateToProps)(RedirectComponent)\r\n\r\n    return ConnecterAuthRedirectComponent;\r\n}\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport { sendMessageCreator} from '../../Redux/dialogsReducer';\r\nimport Dialogs from './Dialogs';\r\nimport { connect } from 'react-redux';\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\n\r\nlet mapStateToProps = (state) => {\r\n    return{\r\n        messagesPage: state.messagesPage\r\n    }\r\n}\r\n\r\nlet mapDispathToProps = (dispatch) => {\r\n    return{\r\n        sendMessage: (newMessageBody) => dispatch(sendMessageCreator(newMessageBody))\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispathToProps),\r\n    withAuthRedirect\r\n)(Dialogs);","import * as axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    withCredentials: true,\r\n    headers: {\r\n        \"API-KEY\": \"63b50c95-b3b4-409e-8579-c797fdd256ce\"\r\n    },\r\n})\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage = 1, pageSize = 10){\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    },\r\n    follow(userId){\r\n        return instance.post(`follow/${userId}`)\r\n    },    \r\n    unfollow(userId){\r\n        return instance.delete(`follow/${userId}`)\r\n    }\r\n}\r\n\r\nexport const authAPI = {\r\n    authMe(){\r\n        return instance.get(`auth/me`)\r\n    },\r\n    login(email, password, rememberMe = false){\r\n        return instance.post(`auth/login`, {email, password, rememberMe})\r\n    },\r\n    logout(){\r\n        return instance.delete(`auth/login`)\r\n    }\r\n}\r\n\r\nexport const profileAPI = {\r\n    setUser(userId){\r\n        return instance.get(`profile/` + userId)\r\n    },\r\n    getStatus(userId){\r\n        return instance.get(`profile/status/` + userId)\r\n    },\r\n    updateStatus(status){\r\n        return instance.put(`profile/status/`, {status})\r\n    }\r\n}\r\n\r\n","import { usersAPI } from \"../api/api\";\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET_USERS';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst SET_USERS_TOTAL_COUNT = 'SET_USERS_TOTAL_COUNT';\r\nconst TOGGLE_IS_FATCHING = 'TOGGLE_IS_FATCHING';\r\nconst TOGGLE_FOLLOW_PROGRES = 'TOGGLE_FOLLOW_PROGRES';\r\n\r\nlet initialState = {\r\n    users: [\r\n    //    {id: 1, photoUrl: 'https://cs16planet.ru/steam-avatars/images/avatar1833.jpg' ,\r\n    //        follow: false, fullName: 'Rostik', status: 'im a Boss', location: {country: 'Ukrain', city: 'Kiev'}}\r\n    ],\r\n    pageSize: 5,\r\n    totalUsers: 0,\r\n    currentPage: 1,\r\n    isFetching: false,\r\n    followProgres: [],\r\n}\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n    if (action.type === FOLLOW){\r\n        return {\r\n            ...state,\r\n            users: state.users.map(item => {\r\n                if(item.id === action.userId){\r\n                    return {...item, followed: true}\r\n                }\r\n                return item;\r\n            })\r\n        }\r\n    }\r\n    else if (action.type ===  UNFOLLOW){\r\n        return {\r\n            ...state,\r\n            users: state.users.map(item => {\r\n                if(item.id === action.userId){\r\n                    return {...item, followed: false}\r\n                }\r\n                return item;\r\n            })\r\n        }\r\n    }\r\n    else if(action.type === SET_USERS){\r\n        return {\r\n            ...state,\r\n            users: action.users\r\n        }\r\n    }\r\n    else if(action.type === SET_CURRENT_PAGE){\r\n        return {\r\n            ...state,\r\n            currentPage: action.currentPage\r\n        }\r\n    }\r\n    else if(action.type === SET_USERS_TOTAL_COUNT){\r\n        return{\r\n            ...state,\r\n            totalUsers: action.totalCount\r\n        }\r\n    }\r\n    else if(action.type === TOGGLE_IS_FATCHING){\r\n        return {\r\n            ...state,\r\n            isFetching: action.isFetching\r\n        }\r\n    }\r\n    else if(action.type === TOGGLE_FOLLOW_PROGRES){\r\n        return {\r\n            ...state,\r\n            followProgres: action.isFetching \r\n            ? [...state.followProgres, action.userId]\r\n            : state.followProgres.filter(id => id != action.userId)\r\n        }\r\n    }\r\n    return state;\r\n}\r\n\r\nexport const followSuccess = (userId) => ({type: FOLLOW, userId});\r\nexport const unfollowSuccess = (userId) => ({type: UNFOLLOW, userId});\r\nexport const setUsers = (users) => ({type: SET_USERS, users});\r\nexport const setCurrentPage = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage});\r\nexport const setUsersTotalCount = (totalCount) => ({type: SET_USERS_TOTAL_COUNT, totalCount});\r\nexport const toggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FATCHING, isFetching});\r\nexport const toggleFollowFetching = (isFetching, userId) => ({type: TOGGLE_FOLLOW_PROGRES, isFetching, userId});\r\n\r\n// THUNK below\r\n\r\nexport const getUsers = (page, pageSize) => async (dispatch) =>  {\r\n        dispatch(toggleIsFetching(true))\r\n        dispatch(setCurrentPage(page))\r\n        let data = await usersAPI.getUsers(page, pageSize)\r\n            dispatch(toggleIsFetching(false))\r\n            dispatch(setUsers(data.items))\r\n            dispatch(setUsersTotalCount(data.totalCount))\r\n        }\r\n\r\nexport const follow = (userId) => async (dispatch) =>  {\r\n        dispatch(toggleFollowFetching(true, userId))\r\n        let response = await usersAPI.follow(userId)\r\n            if(response.data.resultCode === 0){\r\n                dispatch(followSuccess(userId))\r\n        }\r\n        dispatch(toggleFollowFetching(false, userId))\r\n}\r\n\r\nexport const unfollow = (userId) => async (dispatch) =>  {\r\n        dispatch(toggleFollowFetching(true, userId))\r\n        let response = await usersAPI.unfollow(userId)\r\n            if(response.data.resultCode === 0){\r\n                dispatch(unfollowSuccess(userId))\r\n        }\r\n        dispatch(toggleFollowFetching(false, userId))\r\n}\r\n\r\nexport default usersReducer;\r\n\r\n","import React, { useState } from 'react';\r\nimport style from './Users.module.css';\r\n\r\nconst Paginator = (props) => {\r\n\r\n    let pagesCount = Math.ceil(props.totalUsers / props.pageSize);\r\n    let pages = [];\r\n    for(let i = 1; i <= pagesCount; i++ ){\r\n        pages.push(i)\r\n        }\r\n    \r\n    let portionSize = 10;\r\n    let portionCount = Math.ceil(pagesCount / portionSize);\r\n    let [portionNumber, setPortionNumber] = useState(1);\r\n    let leftPortion = (portionNumber - 1) * portionSize + 1;\r\n    let rightPortion = (portionNumber * portionSize);\r\n        \r\n    return (\r\n        <div className = {style.pagination}>\r\n            {portionNumber > 1 &&\r\n            <botton onClick = {() => setPortionNumber(portionNumber - 1) }>PREV</botton>\r\n            }\r\n            {pages\r\n            .filter(p => p >= leftPortion &&  p <= rightPortion)\r\n            .map( p => {\r\n                return <span className = {props.currentPage === p && style.selectPage}\r\n                onClick = {() => {props.onPageChanged(p)}}>{p}</span>\r\n            })}\r\n            {\r\n            portionCount > portionNumber &&\r\n            <botton onClick = {() => setPortionNumber(portionNumber + 1)}>NEXT</botton>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Paginator;","import React from 'react';\r\nimport userPhoto from '../../assets/imges/userIcon.jpg';\r\nimport style from './Users.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\n    const User = ({ user , ...props}) => {\r\n        return (\r\n            <div className = {style.user}>          \r\n                    <span className = {style.firstBlock}>\r\n                        <div>\r\n                            <NavLink to = {'/profile/' + user.id}>\r\n                                <img className={style.imgIcon} src = {user.photos.small != null ? user.photos.small : userPhoto}/>\r\n                            </NavLink>\r\n                        </div>\r\n                        \r\n                    </span>\r\n                    <div className = {style.secondBlock}>\r\n                        <div>\r\n                            <div>{user.name}</div>\r\n                            <div>{user.status}</div>\r\n                        </div>\r\n                        <div>\r\n                            <div>{'user.location.country'}</div>\r\n                            <div>{'user.location.city'}</div>\r\n                        </div>\r\n                        <div>\r\n                            {user.followed\r\n                                ?<button disabled = {props.followProgres.some(id => id === user.id)} onClick = { () => {\r\n                                    props.unfollow(user.id)\r\n                                }}>unfollow</button> \r\n                                :<button disabled = {props.followProgres.some(id => id === user.id)} onClick = { () => {\r\n                                    props.follow(user.id)\r\n                                }}>follow</button> } \r\n                        </div>\r\n                    </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\nexport default User;","import React from 'react';\r\nimport Paginator from './paginator';\r\nimport User from './User';\r\n\r\nconst Users = (props) => {\r\n    return (\r\n        <div>\r\n            <Paginator \r\n                currentPage = {props.currentPage}\r\n                onPageChanged = {props.onPageChanged}\r\n                totalUsers = {props.totalUsers}\r\n                pageSize = {props.pageSize}\r\n            />\r\n            {\r\n                props.users.map( u => <User \r\n                                        user = {u}\r\n                                        followProgres = {props.followProgres}\r\n                                        unfollow = {props.unfollow}\r\n                                        follow = {props.follow}\r\n                                        key = {u.id}\r\n                                    />                         \r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Users;","import React from 'react';\r\nimport preloader from '../../../assets/imges/reloader.svg'\r\n\r\nlet Preloader = (props) => {\r\n    return (\r\n        <div style = { {backgroundColor: 'white'}}>\r\n            <img src = {preloader} />        \r\n        </div>\r\n    )\r\n} \r\n\r\nexport default Preloader;","import { createSelector } from \"reselect\"\r\n\r\nconst getUsersSelector = (state) => {\r\n    return state.usersPage.users\r\n}\r\n\r\nexport const getUsersState = createSelector(getUsersSelector , (users) => {\r\n        return users\r\n    }\r\n) \r\n\r\nexport const getPageSize = (state) => {\r\n    return state.usersPage.pageSize\r\n}\r\n\r\nexport const getTotalUsers = (state) => {\r\n    return state.usersPage.totalUsers\r\n}\r\n\r\nexport const getCurrentPage = (state) => {\r\n    return state.usersPage.currentPage\r\n}\r\n\r\nexport const getIsFetching = (state) => {\r\n    return state.usersPage.isFetching\r\n}\r\n\r\nexport const getFollowProgres = (state) => {\r\n    return state.usersPage.followProgres\r\n}\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { follow, unfollow, setCurrentPage, toggleFollowFetching, getUsers } from '../../Redux/usersReducer';\r\nimport Users from './Users';\r\nimport Preloader from '../common/preloader/preloader';\r\nimport {getUsersState, getPageSize, getTotalUsers, getCurrentPage, getIsFetching, getFollowProgres} from '../../Redux/userSelectors';\r\n\r\nclass UsersContainer extends React.Component {\r\n\r\n    shouldComponentUpdate(nextProps, nextState){\r\n        return nextProps !== this.props || nextState !== this.state\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.props.getUsers(this.props.currentPage, this.props.pageSize);\r\n    }\r\n    \r\n    onPageChanged = (pageNumber) => {\r\n        this.props.getUsers(pageNumber, this.props.pageSize);\r\n    }\r\n    \r\n    render() {\r\n        return <>\r\n            {this.props.isFetching ? <Preloader /> : null }\r\n                <Users \r\n                    totalUsers = {this.props.totalUsers}\r\n                    pageSize = {this.props.pageSize}\r\n                    currentPage = {this.props.currentPage}\r\n                    onPageChanged = {this.onPageChanged}\r\n                    users = {this.props.users}\r\n                    unfollow = {this.props.unfollow}\r\n                    follow = {this.props.follow} \r\n                    followProgres = {this.props.followProgres}\r\n                    />\r\n                </>\r\n    }\r\n    \r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: getUsersState(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsers: getTotalUsers(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followProgres: getFollowProgres(state)\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {follow, unfollow,\r\n                                        setCurrentPage,\r\n                                        toggleFollowFetching, getUsers})(UsersContainer);\r\n","import React  from 'react';\r\nimport p from './ProfileInfo.module.css';\r\nimport { useEffect, useState } from 'react';\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n \r\n    let [editMode, setEditMode] = useState(false)\r\n    let [status, setStatus] = useState(props.status)\r\n\r\n    useEffect( () => {\r\n        setStatus(props.status)\r\n    }, [props.status])\r\n    \r\n    const activateMode = () => {\r\n        setEditMode(true)\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false)\r\n        props.updateUserStatus(status)\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value)\r\n        \r\n    }\r\n        return(\r\n            <div> \r\n            {!editMode \r\n            ?\r\n                <div>\r\n                    <span onDoubleClick = {activateMode}>{props.status || \"-\"}</span>\r\n                </div>\r\n            :\r\n            <div>\r\n                <input \r\n                    onBlur = {deactivateEditMode}\r\n                    autoFocus = { true} \r\n                    onChange = {onStatusChange}\r\n                    value = {status}\r\n                ></input>\r\n            </div>\r\n            }\r\n            </div>\r\n        )\r\n    }\r\n  \r\n\r\n\r\nexport default ProfileStatusWithHooks;","import React from 'react';\r\nimport p from './ProfileInfo.module.css';\r\n\r\nclass ProfileStatus extends React.Component {\r\n    \r\n    state = {\r\n        editMode: false,\r\n        status: this.props.status\r\n    }\r\n\r\n    activateEditMode = () => {\r\n        this.setState({\r\n            editMode: true\r\n        })\r\n    }\r\n    deactivateEditMode = () => {\r\n        this.setState({\r\n            editMode: false\r\n        })\r\n        this.props.updateUserStatus(this.state.status)\r\n    }\r\n    onStatusChange = (e) => {\r\n        this.setState({\r\n            status: e.currentTarget.value \r\n        })\r\n        \r\n    }\r\n    \r\n    componentDidUpdate(prevProps){\r\n        if(prevProps.status !== this.props.status){\r\n            this.setState({\r\n                status: this.props.status\r\n            })\r\n        }\r\n    }\r\n    \r\n    render(){\r\n        \r\n        return(\r\n            <>\r\n            {!this.state.editMode \r\n            ?\r\n                <div>\r\n                    <span onDoubleClick = {this.activateEditMode}>{this.props.status || \"-\"}</span>\r\n                </div>\r\n            :\r\n            <div>\r\n                <input \r\n                    onChange = {this.onStatusChange} \r\n                    autoFocus = { true} \r\n                    onBlur = {this.deactivateEditMode}\r\n                    value = {this.state.status}\r\n                ></input>\r\n            </div>\r\n            }\r\n            </>\r\n        )\r\n    }\r\n  \r\n}\r\n\r\nexport default ProfileStatus;","import React from 'react';\r\nimport p from './ProfileInfo.module.css';\r\nimport Preloader from '../../common/preloader/preloader';\r\nimport ProfileStatus from './ProfileStatus.jsx';\r\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks.jsx';\r\nimport userIcon from '../../../assets/imges/userIcon.jpg';\r\nimport { useState } from 'react';\r\n\r\n\r\nconst ProfileInfo = (props) => {\r\n\r\n    if(!props.profile){\r\n        return <Preloader />\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            {/* <div>\r\n                <img id={p.bg_img} src=\"https://cs7.pikabu.ru/post_img/big/2017/12/14/6/151324248417431745.jpg\"></img>\r\n            </div> */}\r\n            <div className = {p.discriptionBlock}>\r\n                {/* {\r\n                    !{currentImg}\r\n                    ?<img src={userIcon} /> \r\n                    :<img src={props.profile.photos.large} alt=\"\"/>  \r\n                }\r\n                 */}\r\n                {/* <p>{props.profile.aboutMe}</p> */}\r\n                <ProfileStatusWithHooks    \r\n                    status = {props.status}\r\n                    updateUserStatus = {props.updateUserStatus}\r\n                />\r\n            </div>\r\n        </div>\r\n    )\r\n    \r\n}\r\n\r\nexport default ProfileInfo;","import { profileAPI } from \"../api/api\";\r\n\r\nconst ADD_POST = 'ADD-POST';\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\nconst SET_STATUS = 'SET_STATUS';\r\n\r\nlet initialState = {\r\n    postsData: [\r\n        {id: 1, message: 'SomeTextsdgwergdsfg', likesCount: 12},\r\n        {id: 2, message: 'SomeTextdfgsdfg', likesCount: 11},\r\n    ],\r\n    profile: null,\r\n    status: ''\r\n}\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    if( action.type === ADD_POST){\r\n        let newPost = {\r\n            id: 5,\r\n            message: action.newPostText,\r\n            likesCount: 0\r\n        }\r\n        return {\r\n            ...state,\r\n            postsData: [...state.postsData, newPost],\r\n            newPostText: ''\r\n        };\r\n    } \r\n    else if (action.type === SET_USER_PROFILE){\r\n        return {\r\n            ...state,\r\n            profile: action.profile\r\n        }\r\n    }\r\n    else if (action.type === SET_STATUS){\r\n        return{\r\n            ...state,\r\n            status: action.status\r\n        }\r\n    }\r\n    return state;\r\n}\r\n\r\nexport const addPostActionCreator = (newPostText) => ({type: ADD_POST, newPostText})\r\nconst setUserProfile = (profile) => ({type: SET_USER_PROFILE, profile})\r\nconst setStatus = (status) => ({type: SET_STATUS, status})\r\n\r\nexport const getUserStatus = (userId) => async (dispatch) => {\r\n    let response = await profileAPI.getStatus(userId)\r\n        dispatch(setStatus(response.data))   \r\n    }\r\n\r\nexport const updateUserStatus = (status) => async (dispatch) => {\r\n    let response = await profileAPI.updateStatus(status)\r\n        if(response.data.resultCode === 0){\r\n            dispatch(setStatus(status))\r\n        }        \r\n}\r\n\r\nexport const getUsersProfile = (userId) => async (dispatch) => {\r\n    let response = await profileAPI.setUser(userId)\r\n        dispatch(setUserProfile(response.data))\r\n}\r\n\r\nexport default profileReducer;","import React from 'react';\r\nimport style from'./Post.module.css';\r\n\r\nconst Post = (props) => {\r\n    return( \r\n        <div className= {style.item}>\r\n                <img src=\"https://img.tsn.ua/cached/1518092914/tsn-3122bdbfc8d6fcfa75d8528e9b9cd61a/thumbs/315x210/b4/b1/ada811fe61784362abc9a989cbceb1b4.jpg\"></img>\r\n                {props.message}\r\n                <div>\r\n                    <span>like {props.likesCount}</span>   \r\n                </div>\r\n                 \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport p from './MyPosts.module.css';\r\nimport Post from './Post/Post.js';\r\nimport {Field, reduxForm} from 'redux-form';\r\nimport { required, maxLengthCreator } from '../../../utilites/validators/validator';\r\nimport { withFormElement } from '../../common/FormControls/Forms';\r\n\r\nconst MyPosts = React.memo(props => {\r\n\r\n    let postsElement = props.posts.map(p => <Post id = {p.id} message = {p.message} likesCount = {p.likesCount}/>)\r\n\r\n    let onAddPost = (value) => {\r\n        props.addPost(value.newPostText);\r\n    }\r\n\r\n    return(\r\n        <div className = {p.generalContent}>\r\n            <MyPostsFormRedux onSubmit = {onAddPost}/>\r\n            <div className = {p.postItems}>\r\n                {postsElement}\r\n            </div>   \r\n        </div>\r\n    )\r\n})\r\n\r\n\r\nconst maxLength = maxLengthCreator(10);\r\nconst TextArea = withFormElement(\"textarea\")\r\nconst MyPostsForm = (props) => {\r\n    return(\r\n        <div className = {p.postForm}>\r\n            <form onSubmit = {props.handleSubmit }>\r\n                <img  alt=\"\"/> \r\n                 {/* src={props.profile.photos.large} */}\r\n            <div>\r\n                <Field \r\n                    className = {p.textAreaField}\r\n                    component = {TextArea}\r\n                    name = \"newPostText\" \r\n                    placeholder = \"enter your post\"\r\n                    validate = {[required, maxLength]}\r\n                />\r\n            </div>\r\n            <div className = {p.button}>\r\n                <button>add post</button>\r\n            </div>\r\n            </form>\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nconst MyPostsFormRedux = reduxForm({form: 'MyPostsForm'})(MyPostsForm)\r\n\r\nexport default MyPosts;","import React from 'react';\r\nimport { addPostActionCreator } from '../../../Redux/profileReducer';\r\nimport MyPosts from './MyPosts';\r\nimport { connect } from 'react-redux';\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        profile: state.profilePage.profile,\r\n        posts: state.profilePage.postsData,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText) => dispatch(addPostActionCreator(newPostText))\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;   ","import React from 'react';\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\r\n\r\nconst Profile = (props) => {\r\n\r\n    return(\r\n        <div>\r\n            <ProfileInfo \r\n                profile = {props.profile} \r\n                status = {props.status}\r\n                updateUserStatus = {props.updateUserStatus} \r\n            />\r\n            <MyPostsContainer/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from './Profile';\r\nimport { connect } from 'react-redux';\r\nimport {getUsersProfile, getUserStatus, updateUserStatus} from '../../Redux/profileReducer'\r\nimport { withRouter } from 'react-router-dom';\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    componentDidMount(){\r\n        \r\n        let userId = this.props.match.params.userId;\r\n        \r\n        if (!userId){\r\n            userId =  this.props.authorizedUserId;\r\n        }\r\n        this.props.getUsersProfile(userId)\r\n\r\n        this.props.getUserStatus(userId)\r\n    }\r\n\r\n    render(){\r\n        \r\n        return(\r\n            <Profile \r\n                {...this.props} \r\n                profile = {this.props.profile} \r\n                status = {this.props.status}\r\n                updateUserStatus = {this.props.updateUserStatus} \r\n            />\r\n        )\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.authIcon.id\r\n})\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUsersProfile, getUserStatus, updateUserStatus}),\r\n    withRouter,\r\n    withAuthRedirect\r\n)(ProfileContainer);","import React from 'react';\r\nimport style from'./Header.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\nconst Header = (props) => {\r\n    return(\r\n        <header className = {style.header}>\r\n            <img className = {style.logo} src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/9/97/Office-2010-free-logo.svg/1024px-Office-2010-free-logo.svg.png\"></img>\r\n            <div className = {style.loginIcon}>\r\n                {\r\n                    props.isAuth \r\n                        ?\r\n                        \r\n                        <div className = {style.divLogOut}>\r\n                            <div className = {style.divAvatar}>\r\n                                {!props.profile ? \"\" : <img className = {style.avatar} src = {props.profile.photos.small}/>}\r\n                            </div>\r\n                            <div className = {style.loginName}>\r\n                                {props.login}   \r\n                            </div>\r\n                            <div className = {style.button}>\r\n                                <button onClick = {props.logout}>Logout</button>\r\n                            </div> \r\n                        </div> \r\n                        :\r\n                        <div className = {style.divLogIn}>\r\n                            <NavLink to = {'/login'} className = {style.login}>LOGIN</NavLink>\r\n                        </div>\r\n                }\r\n            </div>  \r\n        </header>\r\n\r\n    );\r\n}\r\n\r\nexport default Header;","import { authAPI } from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst SET_USER_DATA = 'auth/SET_USER_DATA';\r\n\r\nlet initialState = {\r\n    id: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false\r\n}\r\n\r\nlet authReducer = (state = initialState, action) => {\r\n    if(action.type === SET_USER_DATA){\r\n        return{\r\n            ...state,\r\n            ...action.payload\r\n        }\r\n    }\r\n    return state;\r\n}\r\n\r\nexport const setAuthUserData = (id, email, login, isAuth) => ({type:SET_USER_DATA, payload: {id, email, login, isAuth}})\r\n\r\nexport const authMe = () => async (dispath) => {\r\n    let response = await authAPI.authMe()\r\n        if (response.data.resultCode === 0){\r\n            let {id, email, login} = response.data.data\r\n            dispath(setAuthUserData(id, email, login, true))\r\n        }     \r\n}\r\n\r\nexport const login = (email, password, rememberMe) => async (dispath) => {\r\n    let response = await authAPI.login(email, password, rememberMe)\r\n        if (response.data.resultCode === 0){\r\n            dispath(authMe())\r\n        } else{\r\n            let message = response.data.messages.length > 0 ? response.data.messages[0] : \"some error\"; \r\n            dispath(stopSubmit(\"login\", {_error: message}))\r\n        }    \r\n}\r\n\r\nexport const logout = () => async (dispath) => {\r\n    let response = await authAPI.logout()\r\n        if (response.data.resultCode === 0){\r\n            dispath(setAuthUserData(null, null, null, false))\r\n        }\r\n}\r\n\r\nexport default authReducer;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Header from './Header';\r\nimport { logout } from '../../Redux/authReducer';\r\nimport {getUsersProfile} from '../../Redux/profileReducer';\r\n\r\nclass HeaderContainer extends React.Component {\r\n    \r\n    // componentDidMount(){\r\n    //     let userId = true;\r\n        \r\n    //     if (!userId){\r\n    //         userId =  this.props.authorizedUserId;\r\n    //     }\r\n    //     this.props.getUsersProfile(userId)\r\n    // }\r\n\r\n    render(){\r\n        return <Header {...this.props} />\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.authIcon.isAuth,\r\n    login: state.authIcon.login,\r\n    profile: state.profilePage.profile\r\n});\r\nexport default connect(mapStateToProps,{logout, getUsersProfile})(HeaderContainer);","import React from 'react';\r\nimport {Field, reduxForm} from 'redux-form';\r\nimport { withFormElement } from '../common/FormControls/Forms';\r\nimport { required, maxLengthCreator } from '../../utilites/validators/validator';\r\nimport { connect } from 'react-redux';\r\nimport { login, logout } from '../../Redux/authReducer';\r\nimport { Redirect } from 'react-router-dom';\r\nimport styleFormError from '../common/FormControls/Forms.module.css';\r\nimport style from './login.module.css';\r\n\r\nconst maxLength = maxLengthCreator(50)\r\n \r\nconst Input = withFormElement(\"input\");\r\n\r\nconst LoginForm = (props) => {\r\n    return (\r\n        <form onSubmit = {props.handleSubmit} className = {style.form}>\r\n                <div >\r\n                    <Field \r\n                        className = {style.input}\r\n                        placeholder = \"email\" \r\n                        name = \"email\" \r\n                        component = {Input}\r\n                        validate = {[required, maxLength]}\r\n                    />\r\n                </div>\r\n                <div >\r\n                    <Field \r\n                        className = {style.input}\r\n                        type = \"password\"\r\n                        placeholder = \"password\" \r\n                        name = \"password\" \r\n                        component = {Input}\r\n                        validate = {[required, maxLength]}\r\n                    />\r\n                </div>\r\n                <div className = {style.checkbox_group}>\r\n                    \r\n                    <Field \r\n                        className = {style.checkbox}\r\n                        type = \"checkbox\" \r\n                        name = \"rememberMe\"\r\n                        id = \"rememberMe\" \r\n                        component = {Input}\r\n                    /> \r\n    \r\n                    <label for = \"rememberMe\" className = {style.label}>remember me</label>\r\n\r\n                    <div className = {style.b1}>\r\n                        <button className = {style.button_login}>Log in</button>\r\n                    </div>\r\n                    \r\n                </div>\r\n                    {props.error \r\n                        && <div className = {styleFormError.summuryError}>\r\n                            {props.error}\r\n                        </div> }\r\n\r\n                \r\n            </form>\r\n    )\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({form: 'login'})(LoginForm)\r\n\r\n\r\nconst Login = (props) => {\r\n\r\n    const onSubmit = (formData) => {\r\n        props.login(formData.email, formData.password , formData.rememberMe)\r\n    }\r\n\r\n    if (props.isAuth){\r\n        return <Redirect to = '/Profile' />\r\n    }\r\n\r\n    return(\r\n        <div className = {style.loginContainer}>\r\n            <div></div>\r\n            <div className = {style.loginForm}>\r\n                <h1 className = {style.title}>LOGIN</h1>\r\n                <LoginReduxForm \r\n                    onSubmit = {onSubmit}\r\n                />\r\n            </div>\r\n            <div></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.authIcon.isAuth\r\n})\r\n\r\nexport default connect(mapStateToProps, {login, logout})(Login);","import { authMe } from \"./authReducer\";\r\n\r\nconst INITIALIZED_SUCCESS = 'SET_INITIALIZED';\r\n\r\nlet initialState = {\r\n    initialized: false\r\n}\r\n\r\nlet appReducer = (state = initialState, action) => {\r\n    if(action.type === INITIALIZED_SUCCESS){\r\n        return{\r\n            ...state,\r\n            initialized: true\r\n        }\r\n    }\r\n    return state;\r\n}\r\n\r\nconst initializedSuccess = () => ({type:INITIALIZED_SUCCESS})\r\n\r\nexport const initializApp = () => (dispath) => {\r\n    let promise = dispath(authMe())\r\n    Promise.all([promise]).then(() => dispath(initializedSuccess()))\r\n}\r\n\r\nexport default appReducer;","import React from 'react';\nimport './App.css';\nimport Navbar from './components/Navbar/Navbar';\nimport News from './components/News/News';\nimport Music from './components/Music/Music';\nimport { Route, withRouter } from 'react-router-dom';\nimport DialogsContainer from './components/Dialogs/DialogsContainer';\nimport UsersContainer from './components/Users/UsersContainer';\nimport ProfileContainer from './components/Profile/ProfileContainer';\nimport HeaderContainer from './components/Header/HeaderContainer';\nimport Login from './components/Login/Login';\nimport { connect } from 'react-redux';\nimport {initializApp} from '../src/Redux/appReducer';\nimport { compose } from 'redux';\nimport Preloader from './components/common/preloader/preloader';\n\nclass App extends React.Component {\n  \n  componentDidMount(){\n    this.props.initializApp()\n  }\n\n  render(){\n    if (!this.props.initialized){\n      return <Preloader />\n    } \n    return (\n      <div className = \"app-wraper\">\n        <HeaderContainer />\n        <Navbar />\n        <div className = \"app-wrapper-content\">\n          <Route path = \"/Dialogs\" render = {() => <DialogsContainer />} />\n          <Route path = \"/Profile/:userId?\" render = {() => <ProfileContainer />} />\n          <Route path = \"/News\" render = {() => <News />} />\n          <Route path = \"/Music\" render = {() => <Music />} />\n          <Route path = \"/Users\" render = {() => <UsersContainer />} />\n          <Route path = \"/Login\" render = {() => <Login />} />\n        </div>    \n      </div> \n    );\n  }\n  \n}\n\nconst mapStateToProps = (state) => ({\n  initialized: state.app.initialized\n})\n\nexport default compose(\n  withRouter,\n  connect(mapStateToProps,{initializApp})\n)(App)\n\n","import { createStore, combineReducers, applyMiddleware, compose } from \"redux\";\r\nimport profileReducer from \"./profileReducer\";\r\nimport dialogsReducer from \"./dialogsReducer\";\r\nimport usersReducer from \"./usersReducer\";\r\nimport authReducer from \"./authReducer\";\r\nimport thunkMiddleWare from \"redux-thunk\";\r\nimport { reducer as formReducer} from \"redux-form\";\r\nimport appReducer from \"./appReducer\";\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    messagesPage: dialogsReducer,\r\n    usersPage: usersReducer,\r\n    authIcon: authReducer,\r\n    form: formReducer,\r\n    app: appReducer\r\n});\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleWare)));\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport App from './App';\nimport store from './Redux/redux-store';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\n\nlet rerenderEntireTree = () => {\n    ReactDOM.render(\n        <BrowserRouter>\n            <Provider store = {store}>\n                <App />\n            </Provider>\n        </BrowserRouter>, document.getElementById('root'));\n}\n\nrerenderEntireTree(store.getState())\n\nserviceWorker.unregister();","// extracted by mini-css-extract-plugin\nmodule.exports = {\"imgIcon\":\"Users_imgIcon__12cCh\",\"selectPage\":\"Users_selectPage__2kiJy\",\"user\":\"Users_user__uhyf6\",\"firstBlock\":\"Users_firstBlock__1KrRS\",\"secondBlock\":\"Users_secondBlock__1mtbQ\",\"pagination\":\"Users_pagination__2jbrI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"generalContent\":\"MyPosts_generalContent__2q7M8\",\"postForm\":\"MyPosts_postForm__1h2lk\",\"textAreaField\":\"MyPosts_textAreaField__1h_dC\",\"button\":\"MyPosts_button__3-aul\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"Forms_formControl__3UUMn\",\"error\":\"Forms_error__1BeQl\",\"summuryError\":\"Forms_summuryError__g6NWk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialog\":\"DialogsItem_dialog__2KiDN\",\"link\":\"DialogsItem_link__3nuXi\",\"imgAva\":\"DialogsItem_imgAva__1D-Fn\",\"avatar\":\"DialogsItem_avatar__32071\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bg_img\":\"ProfileInfo_bg_img__1HBB5\",\"discriptionBlock\":\"ProfileInfo_discriptionBlock__1JJ3A\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogS\":\"Dialogs_dialogS__1ZnOR\"};","module.exports = __webpack_public_path__ + \"static/media/userIcon.fc3a244b.jpg\";"],"sourceRoot":""}